import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px 

def load_balance_sheet(filepath):
    try:
        # Veriyi yÃ¼kle
        data = pd.read_excel(filepath)
        
        # "Kalem" sÃ¼tununu indeks olarak ayarla
        data.set_index("Kalem", inplace=True)
        
        # SatÄ±r ve sÃ¼tun isimlerinden baÅŸtaki ve sondaki boÅŸluklarÄ± kaldÄ±r
        data.index = data.index.str.strip()
        data.columns = data.columns.str.strip()
        
        return data
    except Exception as e:
        st.error(f"Veri yÃ¼klenemedi: {e}")
        return None


def get_total_by_category(data, category_name):
    try:
        # Belirtilen kategorinin toplam satÄ±rÄ±nÄ± al
        total_row = data.loc[category_name]
        return total_row
    except KeyError:
        st.error(f"Kategori bulunamadÄ±: {category_name}")
        return None



def plot_trend(total_data, title, ylabel):
    fig = px.line(total_data, markers=True, title=title, labels={'index': 'DÃ¶nem', 'value': ylabel})
    fig.update_layout(xaxis_title='DÃ¶nem', yaxis_title=ylabel)
    st.plotly_chart(fig)

def plot_pie(total_data, title):
    fig = px.pie(total_data, values=total_data.values, names=total_data.index, title=title)
    st.plotly_chart(fig)

def show():
    st.title("ğŸ“Š Balance Sheet Dashboard")

    # Excel dosyasÄ±nÄ± yÃ¼kle
    filepath = "./data/bilanco.xlsx"
    data = load_balance_sheet(filepath)

    if data is not None:
        # Anahtar kategorilerden toplam verileri al
        st.subheader("Toplamlar")
        toplam_varliklar = get_total_by_category(data, "Toplam DÃ¶nen VarlÄ±klar") + \
                           get_total_by_category(data, "Toplam Duran VarlÄ±klar")
        toplam_yukumlulukler = get_total_by_category(data, "Toplam KÄ±sa Vadeli YÃ¼kÃ¼mlÃ¼lÃ¼kler") + \
                               get_total_by_category(data, "Toplam Uzun Vadeli YÃ¼kÃ¼mlÃ¼lÃ¼kler")
        toplam_ozkaynaklar = get_total_by_category(data, "Toplam Ã–zkaynaklar")

        if toplam_varliklar is not None and toplam_yukumlulukler is not None and toplam_ozkaynaklar is not None:
            col1, col2, col3 = st.columns(3)
            col1.metric("Toplam VarlÄ±klar", f"{toplam_varliklar.sum():,.2f} TRY")
            col2.metric("Toplam YÃ¼kÃ¼mlÃ¼lÃ¼kler", f"{toplam_yukumlulukler.sum():,.2f} TRY")
            col3.metric("Toplam Ã–zkaynaklar", f"{toplam_ozkaynaklar.sum():,.2f} TRY")

        # Trend analizleri
        st.subheader("Trend Analizi")
        if toplam_varliklar is not None:
            plot_trend(toplam_varliklar, "Toplam VarlÄ±klar Trend Analizi", "TRY")
        if toplam_yukumlulukler is not None:
            plot_trend(toplam_yukumlulukler, "Toplam YÃ¼kÃ¼mlÃ¼lÃ¼kler Trend Analizi", "TRY")
        if toplam_ozkaynaklar is not None:
            plot_trend(toplam_ozkaynaklar, "Toplam Ã–zkaynaklar Trend Analizi", "TRY")

        # DaÄŸÄ±lÄ±m grafikleri
        st.subheader("DaÄŸÄ±lÄ±m Grafikleri")
        if toplam_varliklar is not None:
            plot_pie(toplam_varliklar, "Toplam VarlÄ±klar DaÄŸÄ±lÄ±mÄ±")
        if toplam_yukumlulukler is not None:
            plot_pie(toplam_yukumlulukler, "Toplam YÃ¼kÃ¼mlÃ¼lÃ¼kler DaÄŸÄ±lÄ±mÄ±")
    else:
        st.warning("Veri yÃ¼klenemedi. LÃ¼tfen dosya yolunu kontrol edin.")
